"use client";

import PrivateRoute from "@/components/privateRoute";
import { AuthGoogleProvider } from "@/context/authGoogle";
import PreviewProvider from "@/context/preview";
import { routesApp } from "@/functions/constant";
import { Inter } from "next/font/google";
import { usePathname, useSearchParams } from "next/navigation";
import { Toaster } from "react-hot-toast";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  const searchParams = useSearchParams();

  const checkRoutesPrivate = () => {
    const hasTab = searchParams.has("tab");
    const isPrivate =
      (pathname === routesApp.private.my_media && hasTab) || hasTab;
    return isPrivate;
  };

  const isPrivateRouter = checkRoutesPrivate();

  return (
    <html lang="en">
      <body className={inter.className}>
        <AuthGoogleProvider>
          <PreviewProvider>
            <Toaster
              toastOptions={{
                position: "bottom-right",
                style: {
                  background: "#0b89af",
                  color: "#ffff",
                },
              }}
            />
            <main className="relative flex flex-col justify-between">
              {!isPrivateRouter && children}

              {isPrivateRouter && <PrivateRoute>{children}</PrivateRoute>}
            </main>
          </PreviewProvider>
        </AuthGoogleProvider>
      </body>
    </html>
  );
}
